<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="characterEncodingFilter" class="org.springframework.web.filter.CharacterEncodingFilter">
        <property name="encoding" value="utf-8"/>
        <property name="forceEncoding" value="true"/>
    </bean>
    <bean id="exceptionFilter" class="com.aixuexi.thor.except.ExceptionFilter">
        <property name="defaultHandler" ref="defaultExceptionHandler"/>
        <property name="exceptionHandlers">
            <list>
                <ref bean="nestedServletExceptionHandler"/>
                <ref bean="baseExceptionHandler"/>
            </list>
        </property>
    </bean>
    <bean id="defaultExceptionHandler" class="com.aixuexi.thor.except.handler.DefaultExceptionHandler"/>

    <bean id="baseExceptionHandler" class="com.aixuexi.thor.except.handler.BaseExceptionHandler"/>
    <bean id="nestedServletExceptionHandler" class="com.aixuexi.thor.except.handler.NestedServletExceptionHandler">
        <property name="exceptionHandlers">
            <list>
                <ref bean="baseExceptionHandler"/>
            </list>
        </property>
    </bean>

    <bean id="accessAuthorityFilter" class="com.gaosi.api.davincicode.common.filter.AccessAuthorityFilter">
        <property name="ignoreUrlRegex"
                  value=".*login$|.*.ico$|.*.html*$|.*.js$|.*.css$|.*.jpg$|.*.png$|.*.gif$|.*.pdf$|"/>
        <property name="cookieDomain" value="${cookie_domain}"/>
    </bean>

    <!-- 验证权限 -->
    <bean id="accessVerifyFilter" class="com.aixuexi.vampire.util.AccessVerifyFilter"/>

    <!-- 使用disconf必须添加以下配置 -->
    <bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean"
          destroy-method="destroy">
        <!-- 一定注意修改这里扫描包的路径-->
        <property name="scanPackage" value="com.aixuexi.vampire"/>
    </bean>

    <bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond"
          init-method="init" destroy-method="destroy">
    </bean>

    <!-- 使用托管方式的disconf配置(无代码侵入, 配置更改不会自动reload)-->
    <bean id="configproperties_no_reloadable_disconf"
          class="com.baidu.disconf.client.addons.properties.ReloadablePropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>config.properties</value>
                <value>mq.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyConfigurerForManageWeb"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="false"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="propertiesArray">
            <list>
                <ref bean="configproperties_no_reloadable_disconf"/>
            </list>
        </property>
    </bean>
    <bean id="baseValidatorFactory" class="com.aixuexi.thor.validate.factory.BaseValidatorFactory"/>
    <bean id="validateAspect" class="com.aixuexi.thor.validate.aspect.ValidationAspect">
        <constructor-arg name="validatorFactories">
            <array>
                <ref bean="baseValidatorFactory"/>
            </array>
        </constructor-arg>
    </bean>
    <aop:config>
        <aop:aspect ref="validateAspect">
            <aop:around method="around" pointcut="execution(* com.aixuexi.vampire.controller..*.*(..))"/>
        </aop:aspect>
    </aop:config>
</beans>